{"version":3,"file":"ctrl-ngx-csv.js","sources":["ng://@ctrl/ngx-csv/util.ts","ng://@ctrl/ngx-csv/csv.directive.ts","ng://@ctrl/ngx-csv/csv.module.ts"],"sourcesContent":["export interface HeaderObj {\n  label: string;\n  key: string;\n}\n\nexport const isJsons = (array: any[]) =>\n  Array.isArray(array) &&\n  array.every(row => typeof row === 'object' && !(row instanceof Array));\n\nexport const isArrays = (array: any[]) =>\n  Array.isArray(array) && array.every(row => Array.isArray(row));\n\nexport function jsonsHeaders(array: object[]) {\n  return Array.from(\n    new Set(\n      array.map(item => Object.keys(item)).reduce((a, b) => [...a, ...b], []),\n    ),\n  );\n}\n\nexport function jsons2arrays(\n  jsons: { [key: string]: string }[],\n  headers?: string[] | HeaderObj[],\n) {\n  headers = headers || jsonsHeaders(jsons);\n\n  // allow headers to have custom labels, defaulting to having the header data key be the label\n  let headerLabels: string[] = headers as string[];\n  let headerKeys: string[] = headers as string[];\n  if (isJsons(headers)) {\n    headerLabels = (headers as HeaderObj[]).map(header => header.label);\n    headerKeys = (headers as HeaderObj[]).map(header => header.key);\n  }\n\n  const data = jsons.map(object =>\n    headerKeys.map(header => (header in object ? object[header] : '')),\n  );\n  return [headerLabels, ...data];\n}\n\nexport const elementOrEmpty = (element: any) =>\n  element || element === 0 ? element : '';\n\nexport function joiner(data: any, delimiter = ',') {\n  return data\n    .map((row: any, index: number) =>\n      row.map((element: any) => '\"' + elementOrEmpty(element) + '\"').join(delimiter),\n    )\n    .join(`\\n`);\n}\n\nexport function arrays2csv(\n  data: string[][],\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  return joiner(headers ? [headers, ...data] : data, delimiter);\n}\n\nexport function jsons2csv(\n  data: { [key: string]: string }[],\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  return joiner(jsons2arrays(data, headers), delimiter);\n}\n\nexport function string2csv(\n  data: string,\n  headers?: string[],\n  delimiter?: string,\n) {\n  return headers ? `${headers.join(delimiter)}\\n${data}` : data;\n}\n\nexport function toCSV(\n  data: string | string[][] | { [key: string]: string }[] | any[],\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  if (isJsons(data as any)) {\n    return jsons2csv(data as { [key: string]: string }[], headers, delimiter);\n  }\n  if (isArrays(data as any)) {\n    return arrays2csv(data as string[][], headers, delimiter);\n  }\n  if (typeof data === 'string') {\n    return string2csv(data, headers as string[], delimiter);\n  }\n  throw new TypeError(\n    `Data should be a \"String\", \"Array of arrays\" OR \"Array of objects\" `,\n  );\n}\n\nexport function buildURI(\n  data: string | string[][] | { [key: string]: string }[] | any[],\n  uFEFF = true,\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  const csv = toCSV(data, headers, delimiter);\n  const blob = new Blob([uFEFF ? '\\uFEFF' : '', csv], { type: 'text/csv' });\n  return URL.createObjectURL(blob);\n}\n","import { Directive, HostBinding, Input, OnChanges } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nimport { buildURI, HeaderObj } from './util';\n\n@Directive({ selector: '[csvLink]' })\nexport class CsvDirective implements OnChanges {\n  /** the body of the csv */\n  @Input() data: string | string[][] | { [key: string]: string }[] | any[] = [];\n  /** Set the first line of the csv */\n  @Input() headers?: string[] | HeaderObj[];\n  /** Set the seperator between values */\n  @Input() delimiter = ',';\n  /** Set the filename of the csv. Default is `data.csv` */\n  @Input()\n  set filename(a: string) {\n    this.download = a;\n  }\n  /** adds a Byte order mark to setup the csv as UTF-8  */\n  @Input() uFEFF = true;\n  @HostBinding() href?: SafeResourceUrl;\n  /** filename */\n  @HostBinding() download = 'data.csv';\n  @Input() @HostBinding() target = '_blank';\n  constructor(private sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.href = this.sanitizer.bypassSecurityTrustResourceUrl(\n      buildURI(this.data, this.uFEFF, this.headers, this.delimiter),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CsvDirective } from './csv.directive';\n\n@NgModule({\n  declarations: [CsvDirective],\n  exports: [CsvDirective],\n})\nexport class CsvModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}