/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export var CoreTypes;
(function (CoreTypes) {
    /**
     * @record
     */
    function ReqBodyAction() { }
    CoreTypes.ReqBodyAction = ReqBodyAction;
    if (false) {
        /** @type {?} */
        ReqBodyAction.prototype.action;
        /** @type {?} */
        ReqBodyAction.prototype.bucketname;
        /** @type {?|undefined} */
        ReqBodyAction.prototype.isAdmin;
    }
    /**
     * @record
     */
    function ResultObj() { }
    CoreTypes.ResultObj = ResultObj;
    if (false) {
        /** @type {?} */
        ResultObj.prototype.success;
        /** @type {?|undefined} */
        ResultObj.prototype.error;
    }
    /**
     * @record
     */
    function ResBodySuccess() { }
    CoreTypes.ResBodySuccess = ResBodySuccess;
    if (false) {
        /** @type {?} */
        ResBodySuccess.prototype.result;
    }
    /**
     * @record
     */
    function ReqBodyList() { }
    CoreTypes.ReqBodyList = ReqBodyList;
    if (false) {
        /** @type {?} */
        ReqBodyList.prototype.path;
    }
    /**
     * @record
     */
    function ResFile() { }
    CoreTypes.ResFile = ResFile;
    if (false) {
        /** @type {?} */
        ResFile.prototype.name;
        /** @type {?} */
        ResFile.prototype.fullPath;
        /** @type {?} */
        ResFile.prototype.rightsFirebase;
        /** @type {?} */
        ResFile.prototype.permissions;
        /** @type {?|undefined} */
        ResFile.prototype.perms;
        /** @type {?} */
        ResFile.prototype.size;
        /** @type {?} */
        ResFile.prototype.date;
        /** @type {?} */
        ResFile.prototype.type;
        /** @type {?|undefined} */
        ResFile.prototype.isPhantomFolder;
        /** @type {?|undefined} */
        ResFile.prototype.metaData;
        /** @type {?|undefined} */
        ResFile.prototype.downloadUrl;
    }
    /**
     * @record
     */
    function ResBodyList() { }
    CoreTypes.ResBodyList = ResBodyList;
    if (false) {
        /** @type {?} */
        ResBodyList.prototype.result;
    }
    /**
     * @record
     */
    function ReqBodyRename() { }
    CoreTypes.ReqBodyRename = ReqBodyRename;
    if (false) {
        /** @type {?} */
        ReqBodyRename.prototype.item;
        /** @type {?} */
        ReqBodyRename.prototype.newItemPath;
    }
    /**
     * @record
     */
    function ResBodyRename() { }
    CoreTypes.ResBodyRename = ResBodyRename;
    /**
     * @record
     */
    function ReqBodyMove() { }
    CoreTypes.ReqBodyMove = ReqBodyMove;
    if (false) {
        /** @type {?} */
        ReqBodyMove.prototype.items;
        /** @type {?} */
        ReqBodyMove.prototype.newPath;
    }
    /**
     * @record
     */
    function ResBodyMove() { }
    CoreTypes.ResBodyMove = ResBodyMove;
    /**
     * @record
     */
    function ReqBodyCopy() { }
    CoreTypes.ReqBodyCopy = ReqBodyCopy;
    if (false) {
        /** @type {?|undefined} */
        ReqBodyCopy.prototype.items;
        /** @type {?|undefined} */
        ReqBodyCopy.prototype.singleFileName;
        /** @type {?} */
        ReqBodyCopy.prototype.newPath;
    }
    /**
     * @record
     */
    function ResBodyCopy() { }
    CoreTypes.ResBodyCopy = ResBodyCopy;
    /**
     * @record
     */
    function ReqBodyRemove() { }
    CoreTypes.ReqBodyRemove = ReqBodyRemove;
    if (false) {
        /** @type {?|undefined} */
        ReqBodyRemove.prototype.items;
    }
    /**
     * @record
     */
    function ResBodyRemove() { }
    CoreTypes.ResBodyRemove = ResBodyRemove;
    /**
     * @record
     */
    function ReqBodyEdit() { }
    CoreTypes.ReqBodyEdit = ReqBodyEdit;
    if (false) {
        /** @type {?} */
        ReqBodyEdit.prototype.item;
        /** @type {?} */
        ReqBodyEdit.prototype.content;
    }
    /**
     * @record
     */
    function ResBodyEdit() { }
    CoreTypes.ResBodyEdit = ResBodyEdit;
    /**
     * @record
     */
    function ReqBodyGetContent() { }
    CoreTypes.ReqBodyGetContent = ReqBodyGetContent;
    if (false) {
        /** @type {?} */
        ReqBodyGetContent.prototype.item;
    }
    /**
     * @record
     */
    function ResBodyGetContent() { }
    CoreTypes.ResBodyGetContent = ResBodyGetContent;
    if (false) {
        /** @type {?} */
        ResBodyGetContent.prototype.result;
    }
    /**
     * @record
     */
    function ReqBodyCreateFolder() { }
    CoreTypes.ReqBodyCreateFolder = ReqBodyCreateFolder;
    if (false) {
        /** @type {?} */
        ReqBodyCreateFolder.prototype.newPath;
        /** @type {?|undefined} */
        ReqBodyCreateFolder.prototype.disableNoClobber;
    }
    /**
     * @record
     */
    function ResBodyCreateFolder() { }
    CoreTypes.ResBodyCreateFolder = ResBodyCreateFolder;
    /**
     * @record
     */
    function ReqBodySetPermissions() { }
    CoreTypes.ReqBodySetPermissions = ReqBodySetPermissions;
    if (false) {
        /** @type {?} */
        ReqBodySetPermissions.prototype.items;
        /** @type {?} */
        ReqBodySetPermissions.prototype.role;
        /** @type {?} */
        ReqBodySetPermissions.prototype.entity;
        /** @type {?} */
        ReqBodySetPermissions.prototype.recursive;
    }
    /**
     * @record
     */
    function ReqBodySetPermissionsObject() { }
    CoreTypes.ReqBodySetPermissionsObject = ReqBodySetPermissionsObject;
    if (false) {
        /** @type {?} */
        ReqBodySetPermissionsObject.prototype.items;
        /** @type {?} */
        ReqBodySetPermissionsObject.prototype.permissionsObj;
        /** @type {?} */
        ReqBodySetPermissionsObject.prototype.recursive;
    }
    /**
     * @record
     */
    function ResBodySetPermissions() { }
    CoreTypes.ResBodySetPermissions = ResBodySetPermissions;
    /**
     * @record
     */
    function ResBodyUploadFile() { }
    CoreTypes.ResBodyUploadFile = ResBodyUploadFile;
    /**
     * @record
     */
    function ReqBodyGetSingle() { }
    CoreTypes.ReqBodyGetSingle = ReqBodyGetSingle;
    if (false) {
        /** @type {?} */
        ReqBodyGetSingle.prototype.item;
    }
    /**
     * @record
     */
    function ResBodyGetSingle() { }
    CoreTypes.ResBodyGetSingle = ResBodyGetSingle;
    if (false) {
        /** @type {?} */
        ResBodyGetSingle.prototype.result;
    }
    /**
     * @record
     */
    function FilePermissionsObject() { }
    CoreTypes.FilePermissionsObject = FilePermissionsObject;
    if (false) {
        /** @type {?} */
        FilePermissionsObject.prototype.readers;
        /** @type {?} */
        FilePermissionsObject.prototype.writers;
        /** @type {?} */
        FilePermissionsObject.prototype.others;
    }
    /**
     * @record
     */
    function FirebaseToken() { }
    CoreTypes.FirebaseToken = FirebaseToken;
    if (false) {
        /** @type {?|undefined} */
        FirebaseToken.prototype.iss;
        /** @type {?|undefined} */
        FirebaseToken.prototype.aud;
        /** @type {?|undefined} */
        FirebaseToken.prototype.auth_time;
        /** @type {?|undefined} */
        FirebaseToken.prototype.user_id;
        /** @type {?|undefined} */
        FirebaseToken.prototype.sub;
        /** @type {?|undefined} */
        FirebaseToken.prototype.iat;
        /** @type {?|undefined} */
        FirebaseToken.prototype.exp;
        /** @type {?|undefined} */
        FirebaseToken.prototype.email;
        /** @type {?|undefined} */
        FirebaseToken.prototype.email_verified;
        /** @type {?|undefined} */
        FirebaseToken.prototype.firebase;
    }
    /**
     * @record
     */
    function UserCustomClaims() { }
    CoreTypes.UserCustomClaims = UserCustomClaims;
    if (false) {
        /** @type {?} */
        UserCustomClaims.prototype.groups;
        /** @type {?|undefined} */
        UserCustomClaims.prototype.userIsSudo;
    }
})(CoreTypes || (CoreTypes = {}));
//# sourceMappingURL=data:application/json;base64,