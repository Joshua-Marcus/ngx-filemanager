/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CoreTypes;
(function (CoreTypes) {
    /**
     * @record
     */
    function ReqBodyAction() { }
    CoreTypes.ReqBodyAction = ReqBodyAction;
    /**
     * @record
     */
    function ResultObj() { }
    CoreTypes.ResultObj = ResultObj;
    /**
     * @record
     */
    function ResBodySuccess() { }
    CoreTypes.ResBodySuccess = ResBodySuccess;
    /**
     * @record
     */
    function ReqBodyList() { }
    CoreTypes.ReqBodyList = ReqBodyList;
    /**
     * @record
     */
    function ResFile() { }
    CoreTypes.ResFile = ResFile;
    /**
     * @record
     */
    function ResBodyList() { }
    CoreTypes.ResBodyList = ResBodyList;
    /**
     * @record
     */
    function ReqBodyRename() { }
    CoreTypes.ReqBodyRename = ReqBodyRename;
    /**
     * @record
     */
    function ResBodyRename() { }
    CoreTypes.ResBodyRename = ResBodyRename;
    /**
     * @record
     */
    function ReqBodyMove() { }
    CoreTypes.ReqBodyMove = ReqBodyMove;
    /**
     * @record
     */
    function ResBodyMove() { }
    CoreTypes.ResBodyMove = ResBodyMove;
    /**
     * @record
     */
    function ReqBodyCopy() { }
    CoreTypes.ReqBodyCopy = ReqBodyCopy;
    /**
     * @record
     */
    function ResBodyCopy() { }
    CoreTypes.ResBodyCopy = ResBodyCopy;
    /**
     * @record
     */
    function ReqBodyRemove() { }
    CoreTypes.ReqBodyRemove = ReqBodyRemove;
    /**
     * @record
     */
    function ResBodyRemove() { }
    CoreTypes.ResBodyRemove = ResBodyRemove;
    /**
     * @record
     */
    function ReqBodyEdit() { }
    CoreTypes.ReqBodyEdit = ReqBodyEdit;
    /**
     * @record
     */
    function ResBodyEdit() { }
    CoreTypes.ResBodyEdit = ResBodyEdit;
    /**
     * @record
     */
    function ReqBodyGetContent() { }
    CoreTypes.ReqBodyGetContent = ReqBodyGetContent;
    /**
     * @record
     */
    function ResBodyGetContent() { }
    CoreTypes.ResBodyGetContent = ResBodyGetContent;
    /**
     * @record
     */
    function ReqBodyCreateFolder() { }
    CoreTypes.ReqBodyCreateFolder = ReqBodyCreateFolder;
    /**
     * @record
     */
    function ResBodyCreateFolder() { }
    CoreTypes.ResBodyCreateFolder = ResBodyCreateFolder;
    /**
     * @record
     */
    function ReqBodySetPermissions() { }
    CoreTypes.ReqBodySetPermissions = ReqBodySetPermissions;
    /**
     * @record
     */
    function ReqBodySetPermissionsObject() { }
    CoreTypes.ReqBodySetPermissionsObject = ReqBodySetPermissionsObject;
    /**
     * @record
     */
    function ResBodySetPermissions() { }
    CoreTypes.ResBodySetPermissions = ResBodySetPermissions;
    /**
     * @record
     */
    function ResBodyUploadFile() { }
    CoreTypes.ResBodyUploadFile = ResBodyUploadFile;
    /**
     * @record
     */
    function ReqBodyGetSingle() { }
    CoreTypes.ReqBodyGetSingle = ReqBodyGetSingle;
    /**
     * @record
     */
    function ResBodyGetSingle() { }
    CoreTypes.ResBodyGetSingle = ResBodyGetSingle;
    /**
     * @record
     */
    function FilePermissionsObject() { }
    CoreTypes.FilePermissionsObject = FilePermissionsObject;
    /**
     * @record
     */
    function FirebaseToken() { }
    CoreTypes.FirebaseToken = FirebaseToken;
    /**
     * @record
     */
    function UserCustomClaims() { }
    CoreTypes.UserCustomClaims = UserCustomClaims;
})(CoreTypes || (CoreTypes = {}));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

//# sourceMappingURL=ngx-filemanager-core.js.map